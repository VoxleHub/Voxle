local TweenService = game:GetService("TweenService")
local noclipE = false
local antifall = false

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        end
    end
end

local function moveto(obj, speed)
    local info =
        TweenInfo.new(
        ((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude) / speed,
        Enum.EasingStyle.Linear
    )
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0, 0, 0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end

    tween.Completed:Connect(
        function()
            antifall:Destroy()
            noclipE:Disconnect()
        end
    )
end

local MOB = {}

for i, v in pairs(game:GetService("Workspace").Live.NPCs.Client:GetChildren()) do
    if v:IsA "Model" then
		if not table.find(MOB, tostring(v.HumanoidRootPart.NPCTag.NameLabel.Text)) then
            table.insert(MOB, tostring(v.HumanoidRootPart.NPCTag.NameLabel.Text))
        end
    end
end
local function getClosest()
    local dist, thing = math.huge
    for i, v in next, game:GetService("Workspace").Live.NPCs.Client:GetChildren() do
        if v:IsA("Model") then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua'))()
getgenv().SecureMode = true

local Window = Rayfield:CreateWindow({
	Name = "Voxle Hub",
	LoadingTitle = "Voxle Hub",
	LoadingSubtitle = "by Voxle",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, 
		FileName = "Voxle Hub"
	},
        Discord = {
        	Enabled = true,
        	Invite = "RSsC4ATvkj", 
        	RememberJoins = true
        },

})

local Tab = Window:CreateTab("Main")

local Section = Tab:CreateSection("Farming")

 	Tab:CreateToggle({
	Name = "Kill Aura",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(Value)
		a = Value
		while a do task.wait()
            pcall(function()
			local args = {
				[1] = getClosest().Name
			}

			game:GetService("ReplicatedStorage").Packages.Knit.Services.ClickService.RF.Click:InvokeServer(unpack(args))
        end)
		end
	end,
})

local drop = Tab:CreateDropdown({
	Name = "Select Mob",
	Options = MOB,
	CurrentOption = "Mob List",
	Flag = "Dropdown1", 
	Callback = function(Value)
        getgenv().mob = Value
	end,
})
local function getClosestMOB()
    local dist, thing = math.huge
    for i, v in next, game:GetService("Workspace").Live.NPCs.Client:GetChildren() do
        if v:IsA("Model") and v.HumanoidRootPart.NPCTag.NameLabel.Text == mob then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end

Tab:CreateToggle({
	Name = "Farm Mob",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(Value)
        aa = Value
        while aa do task.wait()
            pcall(function()
                moveto(getClosestMOB().HumanoidRootPart.CFrame + Vector3.new(5,0,0),50)
            end)
        end
	end,
})

Tab:CreateButton({
	Name = "Refresh mobs",
	Callback = function()
        table.clear(MOB)
		for i, v in pairs(game:GetService("Workspace").Live.NPCs.Client:GetChildren()) do
            if v:IsA "Model" then
                if not table.find(MOB, tostring(v.HumanoidRootPart.NPCTag.NameLabel.Text)) then
                    table.insert(MOB, tostring(v.HumanoidRootPart.NPCTag.NameLabel.Text))
                    drop:Refresh(MOB, "Mob List")
                end
            end
        end
	end,
})

Tab:CreateToggle({
	Name = "Farm Nearest Mob",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(Value)
        aaaaa = Value
        while aaaaa do task.wait()
            pcall(function()
                moveto(getClosest().HumanoidRootPart.CFrame + Vector3.new(5,0,0),50)
            end)
        end
	end,
})


Rayfield:LoadConfiguration()
