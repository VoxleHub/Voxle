local function getFRUIT()
    local dist, thing = math.huge
    for i, v in next, game:GetService("Workspace"):GetChildren() do
        if v:IsA("Tool")  then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Handle.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end


local function getCHEST()
    local dist, thing = math.huge
    for i, v in next, game:GetService("Workspace"):GetChildren() do
        if v:IsA("Model") and v.Name == "Chest" then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Hitbox.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end
local TweenService = game:GetService("TweenService")
local noclipE = false
local antifall = false

local function noclip()
    for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true then
            v.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        end
    end
end

local function moveto(obj, speed)
    local info =
        TweenInfo.new(
        ((game.Players.LocalPlayer.Character.HumanoidRootPart.Position - obj.Position).Magnitude) / speed,
        Enum.EasingStyle.Linear
    )
    local tween = TweenService:Create(game.Players.LocalPlayer.Character.HumanoidRootPart, info, {CFrame = obj})

    if not game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
        antifall = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0, 0, 0)
        noclipE = game:GetService("RunService").Stepped:Connect(noclip)
        tween:Play()
    end

    tween.Completed:Connect(
        function()
            antifall:Destroy()
            noclipE:Disconnect()
        end
    )
end

local MOB = {}

for i, v in pairs(game:GetService("Workspace")["NPC Zones"]:GetDescendants()) do
    if v:IsA "StringValue" and v.Name == "NPCName" then
		if not table.find(MOB, tostring(v.Value)) then
            table.insert(MOB, tostring(v.Value))
        end
    end
end
local ISLAND = {}

for i, v in pairs(game:GetService("Workspace")["Npc_Workspace"]["Spawn Setters"]:GetChildren()) do
    if v:IsA "Model" then
		if not table.find(ISLAND, tostring(v)) then
            table.insert(ISLAND, tostring(v))
        end
    end
end

local BACK = {}

for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    if v:IsA "Tool" then
		if not table.find(BACK, tostring(v)) then
            table.insert(BACK, tostring(v))
        end
    end
end


local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/UI-Interface/CustomFIeld/main/RayField.lua'))()
getgenv().SecureMode = true

local Window = Rayfield:CreateWindow({
	Name = "Voxle Hub",
	LoadingTitle = "Voxle Hub",
	LoadingSubtitle = "by Voxle",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, 
		FileName = "Voxle Hub"
	},
        Discord = {
        	Enabled = true,
        	Invite = "RSsC4ATvkj", 
        	RememberJoins = true
        },

})

local Tab = Window:CreateTab("Main")

local Section = Tab:CreateSection("Farming")

 	Tab:CreateToggle({
	Name = "Kill Aura",
	CurrentValue = false,
	Flag = "Toggle3", 
	Callback = function(Value)
		a = Value
            while a do task.wait()
                pcall(function()
                game:GetService("Players").LocalPlayer.Character.Combat.Punch:FireServer((1))
            end)
		end
	end,
})

local drop = Tab:CreateDropdown({
	Name = "Select Mob",
	Options = MOB,
	CurrentOption = "Mob List",
	Flag = "Dropdown1", 
	Callback = function(Value)
        getgenv().mob = Value
	end,
})

local function getClosest()
    local dist, thing = math.huge
    for i, v in next, game:GetService("Workspace")["NPC Zones"]:GetDescendants() do
        if v:IsA("Model") and v.Parent.Name == "NPCS" and v.NPCName.Value == mob then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end

Tab:CreateToggle({
	Name = "Farm Mob",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(Value)
        aa = Value
        while aa do task.wait()
            pcall(function()
                moveto(getClosest().HumanoidRootPart.CFrame + Vector3.new(0,0,0),200)
            end)
        end
	end,
})

Tab:CreateButton({
	Name = "Refresh mobs",
	Callback = function()
        table.clear(MOB)
        for i, v in pairs(game:GetService("Workspace")["NPC Zones"]:GetDescendants()) do
            if v:IsA "StringValue" and v.Name == "NPCName" then
                if not table.find(MOB, tostring(v.Value)) then
                    table.insert(MOB, tostring(v.Value))
                    drop:Refresh(MOB, "Mob List")
                end
            end
        end
	end,
})
Tab:CreateToggle({
	Name = "Farm Chests",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(Value)
        aaaa = Value
        while aaaa do task.wait()
            pcall(function()
                moveto(getCHEST().Hitbox.CFrame + Vector3.new(0,0,0),200)
            end)
        end
	end,
})
Tab:CreateToggle({
	Name = "Farm Fruit",
	CurrentValue = false,
	Flag = "Toggle1", 
	Callback = function(Value)
        aaaa = Value
        while aaaa do task.wait()
            pcall(function()
                moveto(getFRUIT().Handle.CFrame + Vector3.new(0,0,0),200)
                for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
                    if v:IsA("Part") or v:IsA("MeshPart") then
                        if game:GetService("Players").LocalPlayer:DistanceFromCharacter(v.Position) <= 50 then
                            if v:FindFirstChild("ProximityPrompt") then
                                fireproximityprompt(v.ProximityPrompt)
                            end
                        end
                    end
                end
            end)
        end
	end,
})

local Tab = Window:CreateTab("Teleports")
    Tab:CreateDropdown({
	Name = "Select Island",
	Options = ISLAND,
	CurrentOption = "Island List",
	Flag = "Dropdown2", 
	Callback = function(Value)
        getgenv().island = Value
	end,
})
Tab:CreateButton({
	Name = "Teleport to Island",
	Callback = function()
        moveto(game:GetService("Workspace")["Npc_Workspace"]["Spawn Setters"][island].Clicker.CFrame + Vector3.new(0,0,0),200)

	end,
})

    Tab:CreateDropdown({
	Name = "Select NPC",
	Options = {
    "Buso",
    "ObsHaki",
    "Black Leg",
    "Flashstep 1",
    "Flashstep 2",
    "Pipe",
    "Katana",
    "Soul Cane"},
	CurrentOption = "NPC List",
	Flag = "Dropdown3", 
	Callback = function(Value)
        getgenv().npc = Value
	end,
})
Tab:CreateButton({
	Name = "Teleport to NPC",
	Callback = function()
        if npc == "Buso" then
            moveto(game:GetService("Workspace")["Npc_Workspace"].Buso["1"].Clicker.CFrame
            + Vector3.new(0,0,0),200)
        elseif npc == "ObsHaki" then
            moveto(game:GetService("Workspace")["Npc_Workspace"].ObsHaki["1"].Clicker.CFrame + Vector3.new(0,0,0),200)

        elseif npc == "Black Leg" then
            moveto(game:GetService("Workspace")["Npc_Workspace"].Geppo["Black Leg"].Clicker.CFrame + Vector3.new(0,0,0),200)


        elseif npc == "Flashstep 1" then
            moveto(game:GetService("Workspace")["Npc_Workspace"].FlashStep["1"].Clicker.CFrame + Vector3.new(0,0,0),200)

        elseif npc == "Flashstep 2" then
            moveto(game:GetService("Workspace")["Npc_Workspace"].FlashStep["2"].Clicker.CFrame + Vector3.new(0,0,0),200)

        elseif npc == "Pipe" then
            moveto(game:GetService("Workspace")["Npc_Workspace"]["Sword Sellers"].Pipe.Clicker.CFrame + Vector3.new(0,0,0),200)

        elseif npc == "Katana" then
            moveto(game:GetService("Workspace")["Npc_Workspace"]["Sword Sellers"].Katana.Clicker.CFrame + Vector3.new(0,0,0),200)

        elseif npc == "Soul Cane" then
            moveto(game:GetService("Workspace")["Npc_Workspace"]["Sword Sellers"]["Soul Cane"].Clicker.CFrame + Vector3.new(0,0,0),200)
            
        end
	end,
})

    Tab = Window:CreateTab("Settings")

    WEAP = Tab:CreateDropdown({
	Name = "Select Weapon",
	Options = BACK,
	CurrentOption = "Weapon List",
	Flag = "Dropdown1", 
	Callback = function(Value)
        getgenv().weapon = Value
	end,
})


Tab:CreateToggle({
	Name = "Auto Equip",
	CurrentValue = false,
	Flag = "Toggle5", 
	Callback = function(Value)
        aaa = Value
        while aaa do task.wait()
            for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
                if v.name == weapon then
                    v.Parent = game.Players.LocalPlayer.Character            
                end
            end
        end
	end,
})
Tab:CreateButton({
	Name = "Refresh Weapons",
	Callback = function()
        table.clear(BACK)
        for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if v:IsA "Tool" then
                if not table.find(BACK, tostring(v)) then
                    table.insert(BACK, tostring(v))
                    WEAP:Refresh(BACK, "Weapon List")
                end
            end
        end
	end,
})

Rayfield:LoadConfiguration()
